{"version":3,"file":"static/js/390.b6a5abfd.chunk.js","mappings":"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","sources":["api/movies.js","components/Loader/loader.styled.js","components/Loader/Loader.jsx","components/MovieCard/movieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/Home/home.styled.js","pages/Home/Home.jsx","pages/Movies/movies.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86a1cc89777a565dcdd4691f802dc14c';\n\nexport const getTrending = async () => {\n  const response = await axios.get(BASE_URL + '/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n\nexport const findMovie = async query => {\n  const response = await axios.get(BASE_URL + `/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  opacity: ${({ visible }) => (visible ? '1' : '0')};\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  // visibility: visible;\n  background-color: #1f0825d9;\n  transition: 0.5s visibility, 0.5s opacity;\n`;\n","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { LoaderContainer } from './loader.styled';\n\nconst Loader = ({ visible }) => {\n  return (\n    <LoaderContainer visible={visible}>\n      <ColorRing\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport const Card = styled.li`\n  width: 192px;\n  list-style-type: none;\n`;\n\nexport const ImgContainer = styled.div`\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  max-height: 282px;\n  border-radius: 10px;\n  box-sizing: border-box;\n  outline: 1px solid #505050;\n  outline-offset: -1px;\n  transition: 0.3s background-color, 0.3s border-color;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    visibility: hidden;\n    opacity: 0;\n    border: 6px solid #ff8600;\n    border-radius: 10px;\n    transition: 0.3s visibility, 0.3s opacity;\n  }\n`;\n\nexport const ImgLink = styled(Link)`\n  &:hover > div {\n    background-color: #0000008a;\n  }\n\n  &:hover > div::after {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:hover > div > img {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Img = styled(LazyLoadImage)`\n  display: block;\n  position: relative;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  max-height: 290px;\n  object-fit: cover;\n  transition: 0.3s transform;\n`;\n\nexport const TitleLink = styled(Link)`\n  transition: 0.3s color;\n  font-size: 14px;\n  font-weight: bold;\n  color: #fff;\n\n  &:hover {\n    color: #ff8600;\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport {\n  Card,\n  Img,\n  ImgContainer,\n  ImgLink,\n  TitleLink,\n} from './movieCard.styled';\nimport emptyIMG from 'assets/images/unknown-cover.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <Card key={movie.id}>\n      <ImgLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <ImgContainer>\n          <Img\n            src={\n              movie.poster_path\n                ? 'https://image.tmdb.org/t/p/original' + movie.poster_path\n                : emptyIMG\n            }\n            width={192}\n            height={282}\n            alt={movie.original_title + ' Movie Poster'}\n            effect=\"blur\"\n            placeholderSrc={\n              movie.poster_path\n                ? 'https://image.tmdb.org/t/p/original' + movie.poster_path\n                : emptyIMG\n            }\n          />\n        </ImgContainer>\n      </ImgLink>\n      <TitleLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <p> {movie.original_title}</p>\n      </TitleLink>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding-top: 64px;\n`;\n\nexport const H1 = styled.h1`\n  margin-top: 40px;\n  color: #ff8600;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getTrending } from 'api/movies';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Container } from 'components/Layout/layout.style';\nimport { MoviesList } from 'pages/Movies/movies.styled';\nimport { H1, Main } from './home.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [status, setStatus] = useState('resolved');\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const [loaderVisibiliy, setLoaderVisibility] = useState(true);\n\n  const fetchMovies = async () => {\n    try {\n      const trending = await getTrending();\n      setTrendingMovies(trending);\n      setStatus('resolved');\n      setLoaderVisibility(false);\n    } catch (error) {\n      setErrorMsg(error.message);\n      setStatus('rejected');\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  // if (status === 'resolved') {\n  return (\n    <>\n      <Loader visible={loaderVisibiliy} />\n\n      {status === 'resolved' ? (\n        <Main>\n          <Container>\n            <H1>Trending today</H1>\n            <MoviesList>\n              {trendingMovies.map(movie => {\n                return <MovieCard key={movie.id} movie={movie} />;\n              })}\n            </MoviesList>\n          </Container>\n        </Main>\n      ) : (\n        console.warn(errorMsg)\n      )}\n    </>\n  );\n  // }\n\n  // if (status === 'rejected') {\n\n  // }\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding-top: 64px;\n`;\n\nexport const H1 = styled.h1`\n  color: #fff;\n  font-weight: normal;\n`;\n\nexport const BrandColor = styled.span`\n  color: #ff8600;\n  font-weight: bold;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n`;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","params","api_key","response","status","Error","data","results","getMovieById","movieId","getMovieCast","cast","getMovieReviews","findMovie","query","LoaderContainer","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Card","ImgContainer","ImgLink","Link","Img","LazyLoadImage","TitleLink","movie","location","useLocation","to","id","state","from","src","poster_path","emptyIMG","alt","original_title","effect","placeholderSrc","Main","H1","useState","trendingMovies","setTrendingMovies","setStatus","errorMsg","setErrorMsg","loaderVisibiliy","setLoaderVisibility","fetchMovies","trending","message","useEffect","Loader","map","MovieCard","console","warn","BrandColor","MoviesList"],"sourceRoot":""}