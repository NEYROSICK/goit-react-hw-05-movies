{"version":3,"file":"static/js/299.7d9381cb.chunk.js","mappings":"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","sources":["api/movies.js","components/Loader/loader.styled.js","components/Loader/Loader.jsx","components/MovieCard/movieCard.styled.js","components/MovieCard/MovieCard.jsx","components/Reviews/reviews.styled.js","components/Searchbar/searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","pages/Movies/movies.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86a1cc89777a565dcdd4691f802dc14c';\n\nexport const getTrending = async () => {\n  const response = await axios.get(BASE_URL + '/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n\nexport const findMovie = async query => {\n  const response = await axios.get(BASE_URL + `/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  opacity: ${({ visible }) => (visible ? '1' : '0')};\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  // visibility: visible;\n  background-color: #1f0825d9;\n  transition: 0.5s visibility, 0.5s opacity;\n`;\n","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { LoaderContainer } from './loader.styled';\n\nconst Loader = ({ visible }) => {\n  return (\n    <LoaderContainer visible={visible}>\n      <ColorRing\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport const Card = styled.li`\n  width: 192px;\n  list-style-type: none;\n`;\n\nexport const ImgContainer = styled.div`\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  max-height: 282px;\n  border-radius: 10px;\n  box-sizing: border-box;\n  outline: 1px solid #505050;\n  outline-offset: -1px;\n  transition: 0.3s background-color, 0.3s border-color;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    visibility: hidden;\n    opacity: 0;\n    border: 6px solid #ff8600;\n    border-radius: 10px;\n    transition: 0.3s visibility, 0.3s opacity;\n  }\n`;\n\nexport const ImgLink = styled(Link)`\n  &:hover > div {\n    background-color: #0000008a;\n  }\n\n  &:hover > div::after {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:hover > div > img {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Img = styled(LazyLoadImage)`\n  display: block;\n  position: relative;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  max-height: 290px;\n  object-fit: cover;\n  transition: 0.3s transform;\n`;\n\nexport const TitleLink = styled(Link)`\n  transition: 0.3s color;\n  font-size: 14px;\n  font-weight: bold;\n  color: #fff;\n\n  &:hover {\n    color: #ff8600;\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport {\n  Card,\n  Img,\n  ImgContainer,\n  ImgLink,\n  TitleLink,\n} from './movieCard.styled';\nimport emptyIMG from 'assets/images/unknown-cover.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <Card key={movie.id}>\n      <ImgLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <ImgContainer>\n          <Img\n            src={\n              movie.poster_path\n                ? 'https://image.tmdb.org/t/p/original' + movie.poster_path\n                : emptyIMG\n            }\n            width={192}\n            height={282}\n            alt={movie.original_title + ' Movie Poster'}\n          />\n        </ImgContainer>\n      </ImgLink>\n      <TitleLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <p> {movie.original_title}</p>\n      </TitleLink>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  padding: 0;\n`;\n\nexport const NotFound = styled.p`\n  text-align: center;\n  color: #fff;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n  padding: 20px 0;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  max-width: 300px;\n  padding: 10px 16px;\n  background-color: transparent;\n  border: none;\n  outline: 1px solid #505050;\n  color: #fff;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\n    rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n  font-size: 16px;\n  font-family: Montserrat;\n  &::placeholder {\n    color: #d2aeae;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ff8600;\n  border: 4px solid transparent;\n  border-radius: 10px;\n  width: 48px;\n  height: 48px;\n  transition: 0.3s border, 0.3s background-color, 0.2s transform;\n  cursor: pointer;\n\n  &:hover {\n    border-color: #ff9e00;\n    background-color: #fba647;\n  }\n\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n","import { Context } from 'context/GlobalContext';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input } from './searchbar.styled';\nimport { FaEye } from 'react-icons/fa';\n\nconst Searchbar = ({ movies }) => {\n  const { searchParams, setSearchParams } = useContext(Context);\n  const [value, setValue] = useState(searchParams.get('query') ?? '');\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n\n    if (!movies.length) {\n      setValue(searchParams.get('query') ?? '');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movies]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.currentTarget.elements.search.value;\n    searchQuery ? setSearchParams({ query: searchQuery }) : setSearchParams({});\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        onChange={handleChange}\n        value={value}\n        name=\"search\"\n        ref={inputRef}\n        placeholder=\"Enter title of the movie\"\n      />\n      <Button>\n        <FaEye size={20} color={'white'} />\n      </Button>\n    </Form>\n  );\n};\n\nexport default Searchbar;\n","import { findMovie } from 'api/movies';\nimport { Container } from 'components/Layout/layout.style';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { Context } from 'context/GlobalContext';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { BrandColor, H1, Main, MoviesList } from './movies.styled';\nimport Loader from 'components/Loader/Loader';\nimport { NotFound } from 'components/Reviews/reviews.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const { searchParams } = useContext(Context);\n\n  const [loaderVisibiliy, setLoaderVisibility] = useState(false);\n\n  const fetchMovies = async () => {\n    setLoaderVisibility(true);\n    const result = await findMovie(searchParams.get('query'));\n    setMovies(result);\n    setLoaderVisibility(false);\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query')) {\n      fetchMovies();\n    }\n\n    return () => {\n      setMovies([]);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  return (\n    <Main>\n      <Container>\n        <Loader visible={loaderVisibiliy} />\n\n        <Searchbar movies={movies} />\n        {movies.length ? (\n          <>\n            <H1>\n              <BrandColor>Results for: </BrandColor>\n              {searchParams.get('query')}\n            </H1>\n            <MoviesList>\n              {movies.map(movie => {\n                return <MovieCard key={movie.id} movie={movie} />;\n              })}\n            </MoviesList>\n          </>\n        ) : null}\n        {!movies.length && searchParams.get('query') ? (\n          <Container>\n            <NotFound>\n              Sorry, we don't find any of movies for your query😢\n            </NotFound>\n          </Container>\n        ) : null}\n      </Container>\n    </Main>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding-top: 64px;\n`;\n\nexport const H1 = styled.h1`\n  color: #fff;\n  font-weight: normal;\n`;\n\nexport const BrandColor = styled.span`\n  color: #ff8600;\n  font-weight: bold;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n`;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","params","api_key","response","status","Error","data","results","getMovieById","movieId","getMovieCast","cast","getMovieReviews","findMovie","query","LoaderContainer","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Card","ImgContainer","ImgLink","Link","Img","LazyLoadImage","TitleLink","movie","location","useLocation","to","id","state","from","src","poster_path","emptyIMG","alt","original_title","Ul","NotFound","Form","Input","Button","movies","useContext","Context","searchParams","setSearchParams","useState","get","value","setValue","inputRef","useRef","useEffect","current","focus","length","onSubmit","e","preventDefault","searchQuery","currentTarget","elements","search","onChange","target","name","ref","placeholder","size","color","setMovies","loaderVisibiliy","setLoaderVisibility","fetchMovies","result","Loader","H1","map","MovieCard","Main","BrandColor","MoviesList"],"sourceRoot":""}