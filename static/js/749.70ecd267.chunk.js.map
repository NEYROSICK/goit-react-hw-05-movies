{"version":3,"file":"static/js/749.70ecd267.chunk.js","mappings":"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","sources":["api/movies.js","components/CastMember/castMember.styled.js","components/CastMember/CastMember.jsx","components/Cast/cast.styled.js","components/Cast/Cast.jsx","components/Reviews/reviews.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86a1cc89777a565dcdd4691f802dc14c';\n\nexport const getTrending = async () => {\n  const response = await axios.get(BASE_URL + '/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(BASE_URL + `/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n\nexport const findMovie = async query => {\n  const response = await axios.get(BASE_URL + `/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('smth went wrong');\n  }\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  list-style-type: none;\n  color: #fff;\n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n`;\n\nexport const Heading = styled.p`\n  font-size: 15px;\n  font-weight: bold;\n  width: 100%;\n  max-width: 190px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 0;\n`;\n\nexport const Character = styled.p`\n  width: 100%;\n  max-width: 190px;\n  font-size: 12px;\n  color: #a7a7a7;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import PropTypes from 'prop-types';\nimport { Character, Heading, Img, Li } from './castMember.styled';\nimport Unknown from 'assets/images/unknown.png';\n\nconst CastMember = ({ img, name, character }) => {\n  return (\n    <Li>\n      <Img\n        width=\"190\"\n        src={img ? 'https://image.tmdb.org/t/p/original' + img : Unknown}\n        alt={name + ' picture'}\n      />\n      <Heading>{name}</Heading>\n      <Character>{character}</Character>\n    </Li>\n  );\n};\n\nCastMember.propTypes = {\n  img: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n\nexport default CastMember;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin: 0;\n  padding: 0;\n`;\n","import { getMovieCast } from 'api/movies';\nimport CastMember from 'components/CastMember/CastMember';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Ul } from './cast.styled';\nimport { Container } from 'components/Layout/layout.style';\nimport { NotFound } from 'components/Reviews/reviews.styled';\nimport { Hourglass } from 'react-loader-spinner';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState();\n  const [status, setStatus] = useState('pending');\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const { movieId } = useParams();\n\n  const fetchMovieCast = async () => {\n    try {\n      const castInfo = await getMovieCast(movieId);\n      setMovieCast(castInfo);\n      setStatus('resolved');\n    } catch (error) {\n      setErrorMsg(error.message);\n      setStatus('rejected');\n    }\n  };\n\n  useEffect(() => {\n    fetchMovieCast(movieId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (status === 'pending') {\n    return (\n      <Container>\n        <div\n          style={{\n            marginTop: '-60px',\n            marginBottom: '20px',\n          }}\n        >\n          <Hourglass\n            visible={true}\n            height=\"36\"\n            width=\"36\"\n            ariaLabel=\"hourglass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            colors={['#ff8600', '#fba647']}\n          />\n        </div>\n      </Container>\n    );\n  }\n\n  if (status === 'resolved') {\n    return movieCast.length ? (\n      <section>\n        <Container>\n          <Ul>\n            {movieCast.map(member => {\n              return (\n                <CastMember\n                  key={member.id}\n                  img={member.profile_path}\n                  name={member.name}\n                  character={member.character}\n                />\n              );\n            })}\n          </Ul>\n        </Container>\n      </section>\n    ) : (\n      <Container>\n        <NotFound>\n          Sorry, we don't find any of cast members for this movieðŸ˜¢\n        </NotFound>\n      </Container>\n    );\n  }\n\n  if (status === 'rejected') {\n    console.warn(errorMsg);\n  }\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  padding: 0;\n`;\n\nexport const NotFound = styled.p`\n  text-align: center;\n  color: #fff;\n`;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","params","api_key","response","status","Error","data","results","getMovieById","movieId","getMovieCast","cast","getMovieReviews","findMovie","query","Li","styled","Img","Heading","Character","img","name","character","width","src","Unknown","alt","Ul","useState","movieCast","setMovieCast","setStatus","errorMsg","setErrorMsg","useParams","fetchMovieCast","castInfo","message","useEffect","style","marginTop","marginBottom","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","length","map","member","profile_path","id","console","warn","NotFound"],"sourceRoot":""}